<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.presto.api.plantBook.entity.PlantBookReq">
    <resultMap type="com.presto.api.plantBook.entity.PlantBookReq" id="result"/>
    <sql id="select_all_cols">
        b_plant_book_req.ID,
        b_plant_book_req.user_id as userId,
        b_plant_book_req.status as status,
        b_plant_book_req.plant_type as plantType,
        b_plant_book_req.plant_method as plantMethod,
        b_plant_book_req.book_id as bookId,
        b_plant_book_req.book_name as bookName,
        b_plant_book_req.book_author as bookAuthor,
        b_plant_book_req.book_press as bookPress,
        b_plant_book_req.book_isbn as bookIsbn,
        b_plant_book_req.book_img_url as bookImgUrl,
        b_plant_book_req.created_date as createdDate,
        b_plant_book_req.updated_date as updatedDate,
        b_plant_book_req.created_by as createdBy,
        b_plant_book_req.updated_by as updatedBy,
        b_plant_book_req.version
    </sql>
    <sql id="insert_all_cols">
        b_plant_book_req.user_id,
        b_plant_book_req.status,
        b_plant_book_req.plant_type,
        b_plant_book_req.plant_method,
        b_plant_book_req.book_id,
        b_plant_book_req.book_name,
        b_plant_book_req.book_author,
        b_plant_book_req.book_press,
        b_plant_book_req.book_isbn,
        b_plant_book_req.book_img_url,
        b_plant_book_req.deleted_flag,
        b_plant_book_req.created_date,
        b_plant_book_req.updated_date,
        b_plant_book_req.created_by,
        b_plant_book_req.updated_by,
        b_plant_book_req.version
    </sql>
    <sql id="where_all">
        WHERE b_plant_book_req.deleted_flag = 0
        <if test="cond.id != null">
            AND b_plant_book_req.id = #{cond.id}
        </if>
        <if test="cond.userId != null">
            AND b_plant_book_req.user_id = #{cond.userId}
        </if>
        <if test="cond.status != null">
            AND b_plant_book_req.status = #{cond.status}
        </if>
        <if test="cond.statuss != null">
            AND b_plant_book_req.status in
            <foreach item="item" index="index" collection="cond.statuss" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="cond.plantType != null">
            AND b_plant_book_req.plant_type = #{cond.plantType}
        </if>
        <if test="cond.plantMethod != null">
            AND b_plant_book_req.plant_method = #{cond.plantMethod}
        </if>
        <if test="cond.bookId != null">
            AND b_plant_book_req.book_id = #{cond.bookId}
        </if>
        <if test="cond.bookName != null">
            AND b_plant_book_req.book_name = #{cond.bookName}
        </if>
        <if test="cond.bookAuthor != null">
            AND b_plant_book_req.book_author = #{cond.bookAuthor}
        </if>
        <if test="cond.bookPress != null">
            AND b_plant_book_req.book_press = #{cond.bookPress}
        </if>
        <if test="cond.bookIsbn != null">
            AND b_plant_book_req.book_isbn = #{cond.bookIsbn}
        </if>
        <if test="cond.bookImgUrl != null">
            AND b_plant_book_req.book_img_url = #{cond.bookImgUrl}
        </if>
        <if test="cond.version != null">
            AND b_plant_book_req.version = #{cond.version}
        </if>
        <if test="cond.ids != null">
            and b_plant_book_req.id in
            <foreach item="item" index="index" collection="cond.ids" open="(" separator="," close=")">
                #{item}
            </foreach>
        </if>
        <if test="cond.createdDateB != null">
            <![CDATA[AND b_plant_book_req.created_date >= #{cond.createdDateB}]]>
        </if>
        <if test="cond.createdDateE != null">
            <![CDATA[AND b_plant_book_req.created_date <= #{cond.createdDateE}]]>
        </if>
        <if test="cond.updatedDateB != null">
            <![CDATA[AND b_plant_book_req.updated_date >= #{cond.updatedDateB}]]>
        </if>
        <if test="cond.updatedDateE != null">
            <![CDATA[AND b_plant_book_req.updated_date <= #{cond.updatedDateE}]]>
        </if>
    </sql>
    <select id="select" resultMap="result">
        select <include refid="select_all_cols"/>
        FROM b_plant_book_req
        WHERE deleted_flag = 0 and b_plant_book_req.ID=#{id}
        <if test="lock">
            FOR UPDATE
        </if>
    </select>
    <select id="query" resultMap="result">
        select <include refid="select_all_cols"/>
        FROM b_plant_book_req
        <include refid="where_all"/>
        <if test="start != null">
            order by b_plant_book_req.created_date desc
            limit #{start},#{size}
        </if>
    </select>
    <select id="count" resultType="java.lang.Long">
        select count(0)
        FROM b_plant_book_req
        <include refid="where_all"/>
    </select>
    <select id="sum" resultType="java.math.BigDecimal">
        select sum(${col})
        FROM b_plant_book_req
        <include refid="where_all"/>
    </select>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO b_plant_book_req(
            <include refid="insert_all_cols"/>
        ) VALUES (
        #{userId},
        #{status},
        #{plantType},
        #{plantMethod},
        #{bookId},
        #{bookName},
        #{bookAuthor},
        #{bookPress},
        #{bookIsbn},
        #{bookImgUrl},
        0,
        <if test="createdDate == null">
            current_timestamp(),
        </if>
        <if test="createdDate != null">
            #{createdDate},
        </if>
        current_timestamp(),
        #{createdBy},
        #{updatedBy},
        1
        )
    </insert>
    <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" >
        INSERT INTO b_plant_book_req(
            <if test="userId != null">
                b_plant_book_req.user_id,
            </if>
            <if test="status != null">
                b_plant_book_req.status,
            </if>
            <if test="plantType != null">
                b_plant_book_req.plant_type,
            </if>
            <if test="plantMethod != null">
                b_plant_book_req.plant_method,
            </if>
            <if test="bookId != null">
                b_plant_book_req.book_id,
            </if>
            <if test="bookName != null">
                b_plant_book_req.book_name,
            </if>
            <if test="bookAuthor != null">
                b_plant_book_req.book_author,
            </if>
            <if test="bookPress != null">
                b_plant_book_req.book_press,
            </if>
            <if test="bookIsbn != null">
                b_plant_book_req.book_isbn,
            </if>
            <if test="bookImgUrl != null">
                b_plant_book_req.book_img_url,
            </if>
            b_plant_book_req.deleted_flag,
            b_plant_book_req.created_date,
            b_plant_book_req.updated_date,
            b_plant_book_req.created_by,
            b_plant_book_req.updated_by,
            b_plant_book_req.version
        ) VALUES (
        <if test="userId != null">
            #{userId},
        </if>
        <if test="status != null">
            #{status},
        </if>
        <if test="plantType != null">
            #{plantType},
        </if>
        <if test="plantMethod != null">
            #{plantMethod},
        </if>
        <if test="bookId != null">
            #{bookId},
        </if>
        <if test="bookName != null">
            #{bookName},
        </if>
        <if test="bookAuthor != null">
            #{bookAuthor},
        </if>
        <if test="bookPress != null">
            #{bookPress},
        </if>
        <if test="bookIsbn != null">
            #{bookIsbn},
        </if>
        <if test="bookImgUrl != null">
            #{bookImgUrl},
        </if>
        0,
        current_timestamp(),
        current_timestamp(),
        #{createdBy},
        #{updatedBy},
        1
        )
    </insert>
    <insert id="batchInsert">
        INSERT INTO b_plant_book_req(
        <include refid="insert_all_cols" />
        ) VALUES
        <foreach item="item" index="index" collection="list" open="" separator="," close="">
            (
            #{item.userId},
            #{item.status},
            #{item.plantType},
            #{item.plantMethod},
            #{item.bookId},
            #{item.bookName},
            #{item.bookAuthor},
            #{item.bookPress},
            #{item.bookIsbn},
            #{item.bookImgUrl},
            0,
            current_timestamp(),
            current_timestamp(),
            #{item.createdBy},
            #{item.updatedBy},
            1
            )
        </foreach>
    </insert>
    <insert id="insertWithId">
        INSERT INTO b_plant_book_req(ID,<include refid="insert_all_cols"/>)
        VALUES
        (#{id},
        #{userId},
        #{status},
        #{plantType},
        #{plantMethod},
        #{bookId},
        #{bookName},
        #{bookAuthor},
        #{bookPress},
        #{bookIsbn},
        #{bookImgUrl},
        0,
        current_timestamp(),
        current_timestamp(),
        #{createdBy},
        #{updatedBy},
        1
        )
    </insert>
    <insert id="batchInsertWithId">
        INSERT INTO b_plant_book_req(ID,<include refid="insert_all_cols"/>)
        VALUES
        <foreach item="item" index="index" collection="list" open="" separator="," close="">
            (
            #{item.id},
            #{item.userId},
            #{item.status},
            #{item.plantType},
            #{item.plantMethod},
            #{item.bookId},
            #{item.bookName},
            #{item.bookAuthor},
            #{item.bookPress},
            #{item.bookIsbn},
            #{item.bookImgUrl},
            0,
            current_timestamp(),
            current_timestamp(),
            #{item.createdBy},
            #{item.updatedBy},
            1
            )
        </foreach>
    </insert>
    <update id="update">
        update b_plant_book_req
        <set>
            user_id = #{userId},
            status = #{status},
            plant_type = #{plantType},
            plant_method = #{plantMethod},
            book_id = #{bookId},
            book_name = #{bookName},
            book_author = #{bookAuthor},
            book_press = #{bookPress},
            book_isbn = #{bookIsbn},
            book_img_url = #{bookImgUrl},
            version = version + 1,
            updated_date = current_timestamp(),
            updated_by=#{updatedBy}
        </set>
        where b_plant_book_req.id = #{id}
    </update>
    <update id="updateSelective">
        update b_plant_book_req
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="status != null">
                status = #{status},
            </if>
            <if test="plantType != null">
                plant_type = #{plantType},
            </if>
            <if test="plantMethod != null">
                plant_method = #{plantMethod},
            </if>
            <if test="bookId != null">
                book_id = #{bookId},
            </if>
            <if test="bookName != null">
                book_name = #{bookName},
            </if>
            <if test="bookAuthor != null">
                book_author = #{bookAuthor},
            </if>
            <if test="bookPress != null">
                book_press = #{bookPress},
            </if>
            <if test="bookIsbn != null">
                book_isbn = #{bookIsbn},
            </if>
            <if test="bookImgUrl != null">
                book_img_url = #{bookImgUrl},
            </if>
            version = version + 1,
            updated_date = current_timestamp(),
            updated_by=#{updatedBy}
        </set>
        where b_plant_book_req.id = #{id}
    </update>
    <delete id="delete">
        update b_plant_book_req set deleted_flag = 1
        <include refid="where_all"/>
    </delete>
    <delete id="deleteById">
        update b_plant_book_req set deleted_flag = 1 where b_plant_book_req.id = #{id}
    </delete>
    <delete id="deleteCompletely">
        delete from b_plant_book_req
        <include refid="where_all"/>
    </delete>
    <delete id="deleteByIdCompletely">
        delete from b_plant_book_req where b_plant_book_req.id = #{id}
    </delete>
</mapper>
